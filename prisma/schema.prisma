// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique @db.VarChar(10)
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Profile   Profile?
  Post      Post[]
  Comment   Comment[]
  Tags      Tag[]
}

model Profile {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  profilePic String
  bio        String   @db.VarChar(120)
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
}

model Post {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String    @db.VarChar(150)
  content     String    @db.VarChar(240)
  isPublished Boolean   @default(false)
  picURL      String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  Comment     Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String   @db.VarChar(250)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model TagstoUser {
//   Tag    Tag  @relation(fields: [tagId], references: [id])
//   tagId  Int
//   user   User @relation(fields: [userId], references: [id])
//   userId Int

//   @@id([tagId, userId])
// }
